; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	speck128_encryptx
;	COMDAT pdata
; File c:\hub\lightmac\lightmac64.c
pdata	SEGMENT
$pdata$speck128_encryptx DD imagerel $LN8
	DD	imagerel $LN8+101
	DD	imagerel $unwind$speck128_encryptx
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$speck128_encryptx DD 040a01H
	DD	02740aH
	DD	013405H
; Function compile flags: /Ogspy
xdata	ENDS
;	COMDAT speck128_encryptx
_TEXT	SEGMENT
key$ = 8
in$ = 16
speck128_encryptx PROC					; COMDAT
; Line 41
$LN8:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rdi
; Line 47
	mov	r9d, DWORD PTR [rcx]
	mov	r10d, DWORD PTR [rcx+4]
; Line 48
	mov	ebx, DWORD PTR [rcx+8]
	mov	edi, DWORD PTR [rcx+12]
; Line 51
	mov	r8d, DWORD PTR [rdx+4]
	mov	ecx, DWORD PTR [rdx]
; Line 53
	xor	r11d, r11d
$LL3@speck128_e:
; Line 56
	ror	ecx, 8
	add	ecx, r8d
	xor	ecx, r9d
; Line 57
	rol	r8d, 3
	xor	r8d, ecx
; Line 60
	ror	r10d, 8
	add	r10d, r9d
	xor	r10d, r11d
; Line 61
	rol	r9d, 3
	inc	r11d
	xor	r9d, r10d
	mov	eax, r10d
; Line 63
	mov	r10d, ebx
	mov	ebx, edi
; Line 64
	mov	edi, eax
	cmp	r11d, 27
	jb	SHORT $LL3@speck128_e
; Line 68
	mov	rbx, QWORD PTR [rsp+8]
	mov	rdi, QWORD PTR [rsp+16]
	mov	DWORD PTR [rdx], ecx
	mov	DWORD PTR [rdx+4], r8d
	ret	0
speck128_encryptx ENDP
_TEXT	ENDS
PUBLIC	lightmac_tag
;	COMDAT pdata
pdata	SEGMENT
$pdata$lightmac_tag DD imagerel $LN13
	DD	imagerel $LN13+182
	DD	imagerel $unwind$lightmac_tag
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lightmac_tag DD 081201H
	DD	0a5412H
	DD	093412H
	DD	0c00e3212H
	DD	0600b700cH
; Function compile flags: /Ogspy
xdata	ENDS
;	COMDAT lightmac_tag
_TEXT	SEGMENT
m$ = 64
msg$ = 64
msglen$ = 72
tag$ = 80
mkey$ = 88
lightmac_tag PROC					; COMDAT
; Line 74
$LN13:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 32					; 00000020H
; Line 82
	and	QWORD PTR [r8], 0
	mov	rbx, r8
; Line 85
	xor	r12d, r12d
	xor	r8d, r8d
	xor	r10d, r10d
	mov	rbp, r9
	mov	esi, edx
	mov	rdi, rcx
; Line 88
	test	edx, edx
	je	SHORT $LN5@lightmac_t
$LL6@lightmac_t:
; Line 90
	mov	al, BYTE PTR [rdi]
	inc	r10d
	inc	r8
	mov	BYTE PTR m$[rsp+r8+3], al
	inc	rdi
; Line 92
	cmp	r10d, 4
	jne	SHORT $LN4@lightmac_t
; Line 94
	inc	r12d
; Line 96
	lea	rdx, QWORD PTR m$[rsp]
	mov	rcx, rbp
	mov	eax, r12d
	bswap	eax
	mov	DWORD PTR m$[rsp], eax
	call	speck128_encryptx
; Line 98
	mov	rdx, QWORD PTR m$[rsp]
	xor	QWORD PTR [rbx], rdx
; Line 100
	xor	r10d, r10d
	xor	r8d, r8d
$LN4@lightmac_t:
; Line 103
	dec	esi
; Line 88
	jne	SHORT $LL6@lightmac_t
$LN5@lightmac_t:
; Line 106
	lea	eax, DWORD PTR [r10+4]
	inc	r10d
	mov	BYTE PTR m$[rsp+rax], 128		; 00000080H
; Line 108
	je	SHORT $LN1@lightmac_t
	lea	rdx, QWORD PTR m$[rsp+4]
	mov	rcx, rbx
	mov	r8d, r10d
	sub	rdx, rbx
$LL3@lightmac_t:
; Line 109
	mov	al, BYTE PTR [rdx+rcx]
	xor	BYTE PTR [rcx], al
	inc	rcx
	dec	r8
	jne	SHORT $LL3@lightmac_t
$LN1@lightmac_t:
; Line 112
	lea	rcx, QWORD PTR [rbp+16]
; Line 114
	mov	rdx, rbx
; Line 115
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r12
	pop	rdi
	pop	rsi
	jmp	speck128_encryptx
lightmac_tag ENDP
_TEXT	ENDS
END
