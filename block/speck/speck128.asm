; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\hub\speck\speck128.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_speck128_encryptx
; Function compile flags: /Ogspy
;	COMDAT _speck128_encryptx
_TEXT	SEGMENT
_t$ = -56						; size = 8
_k2$ = -48						; size = 8
_k1$ = -40						; size = 8
_x1$ = -32						; size = 8
_k3$ = -24						; size = 8
_i$ = -16						; size = 8
_x0$ = -8						; size = 8
_key$ = 8						; size = 4
_in$ = 12						; size = 4
_speck128_encryptx PROC					; COMDAT
; File c:\hub\speck\speck128.c
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 97
	mov	eax, DWORD PTR _key$[ebp]
; Line 98
	mov	ecx, DWORD PTR [eax+8]
; Line 106
	and	DWORD PTR _i$[ebp], 0
	and	DWORD PTR _i$[ebp+4], 0
	mov	DWORD PTR _k1$[ebp], ecx
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _k1$[ebp+4], ecx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _k2$[ebp], ecx
	mov	ecx, DWORD PTR [eax+20]
	push	ebx
	push	esi
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR _k2$[ebp+4], ecx
	mov	ecx, DWORD PTR [eax+24]
	push	edi
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR _k3$[ebp+4], eax
	mov	eax, DWORD PTR _in$[ebp]
	mov	DWORD PTR _k3$[ebp], ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x0$[ebp], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _x0$[ebp+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+12]
	jmp	SHORT $LN3@speck128_e
$LL9@speck128_e:
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	eax, DWORD PTR _x1$[ebp+4]
$LN3@speck128_e:
; Line 109
	mov	edx, ecx
	shrd	ecx, eax, 8
	xor	ebx, ebx
	or	ebx, ecx
	shr	eax, 8
	shl	edx, 24					; 00000018H
	or	edx, eax
	add	ebx, DWORD PTR _x0$[ebp]
; Line 110
	mov	eax, DWORD PTR _x0$[ebp+4]
	adc	edx, DWORD PTR _x0$[ebp+4]
	xor	ebx, edi
	xor	edx, esi
	mov	DWORD PTR _x1$[ebp], ebx
	mov	ebx, DWORD PTR _x0$[ebp+4]
	mov	DWORD PTR _x1$[ebp+4], edx
	mov	edx, DWORD PTR _x0$[ebp]
	shld	ebx, edx, 3
	shr	eax, 29					; 0000001dH
	shl	edx, 3
	or	eax, edx
	xor	eax, DWORD PTR _x1$[ebp]
	xor	ecx, ecx
	or	ecx, ebx
	xor	ecx, DWORD PTR _x1$[ebp+4]
; Line 113
	mov	ebx, DWORD PTR _k1$[ebp+4]
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _k1$[ebp]
	shrd	eax, ebx, 8
	mov	DWORD PTR _x0$[ebp+4], ecx
	mov	ecx, DWORD PTR _k1$[ebp]
	shr	ebx, 8
	xor	edx, edx
	or	edx, eax
	shl	ecx, 24					; 00000018H
	or	ecx, ebx
	add	edx, edi
	adc	ecx, esi
	xor	edx, DWORD PTR _i$[ebp]
	xor	ecx, DWORD PTR _i$[ebp+4]
; Line 114
	mov	eax, esi
	shld	esi, edi, 3
	xor	ebx, ebx
	shr	eax, 29					; 0000001dH
	or	esi, ebx
; Line 116
	mov	ebx, DWORD PTR _k3$[ebp+4]
	shl	edi, 3
	or	edi, eax
	mov	eax, DWORD PTR _k3$[ebp]
	mov	DWORD PTR _t$[ebp+4], ebx
	mov	ebx, DWORD PTR _k2$[ebp]
	xor	edi, edx
	xor	esi, ecx
	add	DWORD PTR _i$[ebp], 1
	mov	DWORD PTR _k3$[ebp], ebx
	mov	ebx, DWORD PTR _k2$[ebp+4]
	adc	DWORD PTR _i$[ebp+4], 0
	mov	DWORD PTR _k2$[ebp], eax
	mov	eax, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR _k2$[ebp+4], eax
; Line 117
	mov	eax, DWORD PTR _k3$[ebp]
	mov	DWORD PTR _k3$[ebp], edx
	mov	DWORD PTR _k3$[ebp+4], ecx
	mov	DWORD PTR _k1$[ebp], eax
	mov	DWORD PTR _k1$[ebp+4], ebx
	jne	SHORT $LN8@speck128_e
; Line 106
	cmp	DWORD PTR _i$[ebp], 34			; 00000022H
	jb	$LL9@speck128_e
$LN8@speck128_e:
; Line 120
	mov	eax, DWORD PTR _in$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _x0$[ebp+4]
	mov	DWORD PTR [eax+4], ecx
; Line 121
	mov	ecx, DWORD PTR _x1$[ebp]
	pop	edi
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _x1$[ebp+4]
	pop	esi
	mov	DWORD PTR [eax+12], ecx
	pop	ebx
; Line 122
	leave
	ret	0
_speck128_encryptx ENDP
_TEXT	ENDS
END
