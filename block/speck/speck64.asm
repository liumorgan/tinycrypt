; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\hub\speck\speck64.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_speck64_setkey
; Function compile flags: /Ogspy
;	COMDAT _speck64_setkey
_TEXT	SEGMENT
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_speck64_setkey PROC					; COMDAT
; File c:\hub\speck\speck64.c
; Line 40
	mov	edx, DWORD PTR _in$[esp-4]
	mov	ecx, DWORD PTR [edx]
; Line 41
	mov	eax, DWORD PTR [edx+4]
	push	ebx
	push	esi
	push	edi
; Line 42
	mov	edi, DWORD PTR [edx+8]
; Line 43
	mov	edx, DWORD PTR [edx+12]
; Line 46
	xor	esi, esi
$LL3@speck64_se:
; Line 48
	mov	ebx, DWORD PTR _out$[esp+8]
; Line 50
	ror	eax, 8
	add	eax, ecx
	xor	eax, esi
	mov	DWORD PTR [ebx+esi*4], ecx
; Line 51
	rol	ecx, 3
	xor	ecx, eax
; Line 54
	mov	ebx, edi
	inc	esi
	mov	edi, edx
; Line 55
	mov	edx, eax
	mov	eax, ebx
	cmp	esi, 27					; 0000001bH
	jb	SHORT $LL3@speck64_se
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	ret	0
_speck64_setkey ENDP
_TEXT	ENDS
PUBLIC	_speck64_encrypt
; Function compile flags: /Ogspy
;	COMDAT _speck64_encrypt
_TEXT	SEGMENT
_keys$ = 8						; size = 4
_enc$ = 12						; size = 4
tv186 = 16						; size = 4
_in$ = 16						; size = 4
_speck64_encrypt PROC					; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
; Line 68
	mov	eax, DWORD PTR _in$[ebp]
	mov	ecx, DWORD PTR [eax]
; Line 69
	mov	edx, DWORD PTR [eax+4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _keys$[ebp]
	push	edi
	mov	edi, esi
	add	esi, 104				; 00000068H
	mov	DWORD PTR tv186[ebp], 27		; 0000001bH
$LL10@speck64_en:
; Line 73
	cmp	DWORD PTR _enc$[ebp], 1
	jne	SHORT $LN2@speck64_en
; Line 75
	xor	edx, ecx
; Line 76
	xor	ecx, DWORD PTR [esi]
	ror	edx, 3
	sub	ecx, edx
	rol	ecx, 8
; Line 77
	jmp	SHORT $LN4@speck64_en
$LN2@speck64_en:
; Line 78
	ror	ecx, 8
	add	ecx, edx
	xor	ecx, DWORD PTR [edi]
; Line 79
	rol	edx, 3
	xor	edx, ecx
$LN4@speck64_en:
; Line 71
	sub	esi, 4
	add	edi, 4
	dec	DWORD PTR tv186[ebp]
	jne	SHORT $LL10@speck64_en
; Line 83
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 84
	mov	DWORD PTR [eax+4], edx
	pop	ebx
; Line 85
	pop	ebp
	ret	0
_speck64_encrypt ENDP
_TEXT	ENDS
PUBLIC	_speck64_encryptx
; Function compile flags: /Ogspy
;	COMDAT _speck64_encryptx
_TEXT	SEGMENT
_t$ = -8						; size = 4
_k2$ = -4						; size = 4
_k3$ = 8						; size = 4
_key$ = 8						; size = 4
_i$ = 12						; size = 4
_in$ = 12						; size = 4
_speck64_encryptx PROC					; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
; Line 96
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx]
; Line 97
	mov	eax, DWORD PTR [ecx+4]
	push	ebx
	push	esi
; Line 98
	mov	esi, DWORD PTR [ecx+8]
; Line 99
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR _k3$[ebp], ecx
; Line 102
	mov	ecx, DWORD PTR _in$[ebp]
; Line 105
	and	DWORD PTR _i$[ebp], 0
	push	edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR _k2$[ebp], esi
	mov	esi, DWORD PTR [ecx]
$LL3@speck64_en@2:
; Line 115
	mov	ebx, DWORD PTR _k3$[ebp]
	ror	esi, 8
	add	esi, edi
	xor	esi, edx
	rol	edi, 3
	xor	edi, esi
	ror	eax, 8
	add	eax, edx
	xor	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _t$[ebp], ebx
	mov	ebx, DWORD PTR _k2$[ebp]
	mov	DWORD PTR _k3$[ebp], ebx
	mov	ebx, DWORD PTR _t$[ebp]
	rol	edx, 3
	xor	edx, eax
	inc	DWORD PTR _i$[ebp]
	cmp	DWORD PTR _i$[ebp], 27			; 0000001bH
	mov	DWORD PTR _k2$[ebp], ebx
; Line 116
	mov	ebx, DWORD PTR _k3$[ebp]
	mov	DWORD PTR _k3$[ebp], eax
	mov	eax, ebx
	jb	SHORT $LL3@speck64_en@2
; Line 120
	mov	DWORD PTR [ecx+4], edi
	pop	edi
	mov	DWORD PTR [ecx], esi
	pop	esi
	pop	ebx
; Line 121
	leave
	ret	0
_speck64_encryptx ENDP
_TEXT	ENDS
END
